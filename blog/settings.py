"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os, json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_PATH = [os.path.join(BASE_DIR, 'templates'), os.path.join(BASE_DIR, 'posts/templates'),]

# Credentials are read from 'keys.json' file
with open(os.path.join(os.path.dirname(BASE_DIR),'keys.json')) as data_file:
	data = json.load(data_file)
	SECRET_KEY = data["django_key"]
	DB_PSW = data["database_psw"]
	FROM_EMAIL_ID = data["from_email_id"]
	EMAIL_PASS = data["from_email_pass"]
	AWS_ACCESS_KEY_ID = data["aws_id"]
	AWS_SECRET_ACCESS_KEY = data["aws_key"]
	TO_MAIL_ID = data["to_email_id"]

# For gmail enable app access on https://myaccount.google.com/lesssecureapps, https://accounts.google.com/DisplayUnlockCaptcha
EMAIL_HOST = 'smtp.gmail.com'  # since you are using a gmail account
EMAIL_PORT = 587  # Gmail SMTP port for TLS
EMAIL_USE_TLS = True
EMAIL_HOST_USER = FROM_EMAIL_ID
EMAIL_HOST_PASSWORD = EMAIL_PASS

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*',]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third Party Apps
    'pagedown',
    'markdown_deux',
    'crispy_forms',

    # My Apps
    'posts',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': TEMPLATE_PATH,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# CRISPY FORMS
CRISPY_TEMPLATE_PACK = "bootstrap3"

# Localhost settings
if DEBUG:
	DATABASES = {
	    'default': {
	        'ENGINE': 'django.db.backends.sqlite3',
	        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
	    }
	}

	STATIC_URL = '/static/'
	STATICFILES_DIRS = [
	    os.path.join(BASE_DIR, 'posts/static'),
	]

	STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'static_files')

	MEDIA_URL = '/media/'
	MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'media_files')

# Production settings
else:
	# TO DO : Change the database settings if required
	DATABASES = {
	    'default': {
	        'ENGINE': 'django.db.backends.mysql',
	        'NAME': 'Blog',
	        'USER': 'root',
	        'PASSWORD': DB_PSW,
	        'HOST': 'localhost',
	        'PORT': '3306',
	    }
	}
	INSTALLED_APPS += ['storages']

	# Use BOTO to access S3
	DEFAULT_FILE_STORAGE = 'aws_storage_classes.MediaStorage' # For Media Files. By default both static and media will be stored in the same bucket and same location. To differentiate them, we have created a "aws_storage_classes.py" file in root project location which will create 2 different directories
	AWS_STORAGE_BUCKET_NAME = 'static-files-ec2'
	STATICFILES_STORAGE = 'aws_storage_classes.StaticStorage' # For Static Files

	AWS_S3_DOMAIN = "%s.s3.amazonaws.com" % AWS_STORAGE_BUCKET_NAME

	STATIC_URL = 'https://%s/static/' % AWS_S3_DOMAIN
	STATICFILES_DIRS = [
	    os.path.join(BASE_DIR, 'static'),
	]

	STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'static_files')

	MEDIA_URL = 'https://%s/media/' % AWS_S3_DOMAIN
	MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'media_files')
